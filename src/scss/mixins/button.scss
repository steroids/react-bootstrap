@mixin svg-color($color) {
    svg {
        path { 
            stroke: $color;
        }
    }
}

@mixin button-theme($colorMap, $colorName, $root) {
    background-color: map-get($colorMap, color);
    color: map-get($colorMap, text-color);

    &:hover {
        background-color: map-get($colorMap, color-dark);
    }
    &:focus,
    &:focus-visible {
        border: 4px solid map-get($colorMap, color-light);
    }
    &:active {
        background-color: map-get($colorMap, color-light);
    }

    &:disabled {
        background-color: map-get($colorMap, color);
        color: map-get($colorMap, text-color);
    }

    #{$root}__loader { 
        svg {
            path { 
                stroke: map-get($colorMap, color-light);

                @if ($colorName == 'basic' ) {
                    stroke: map-get($colorMap, color-dark);
                }
            }
        }
    }
}

@mixin button-outline-theme($colorMap, $colorName, $root) {
    background-color: transparent;
    color: map-get($colorMap, color);
    border: 1px solid map-get($colorMap, color);

    &:hover {
        @include svg-color(map-get($colorMap, color-dark));
        color: map-get($colorMap, color-dark);
        border-color: map-get($colorMap, color-dark);
    }
    &:focus {
        box-shadow: 0 0 0 4px map-get($colorMap, color-light), 0 0 0 4px map-get($colorMap, color-light);
        border: none;
    }
    &:active {
        @include svg-color(map-get($colorMap, color-light));
        color: map-get($colorMap, color-light);
        border-color: map-get($colorMap, color-light);
        box-shadow: none;
    }

    &:disabled {
        background-color: transparent;
        @include svg-color(map-get($colorMap, color));
        color: map-get($colorMap, color);
        border: 1px solid map-get($colorMap, color);
    }

    @if ($colorName == "basic") {
        color: $text-color;
    } 

    #{$root}__loader { 
        @include svg-color(map-get($colorMap, color));
    }
}
