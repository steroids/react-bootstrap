:root {
    --basic-color: #eef1f2;
    --basic-focus-color: #f5f8fa;
    --basic-active-color: #e5e9eb;
    --chevron-background-color: #ffffff;
    --chevron-background-color-outline: #f5f8fa;
    --chevron-background-color-basic: #ffffff;
    --chevron-inner-color: #323232;
    --drop-down-border-color: #e9e9e9;
    --scroll-thumb-color: #e5e9eb;
    --scroll-track-color: #f5f8fa;

    --search-color: #626262;
}

html[data-theme="dark"] {
    --basic-color: #5b5c6b;
    --basic-focus-color: #adaab3;
    --basic-active-color: #4e4f57;
    --chevron-background-color: #323232;
    --chevron-background-color-outline: #323232;
    --chevron-background-color-basic: #6f6b76;
    --chevron-inner-color: #ffffff;
    --drop-down-border-color: #595959;
    --scroll-thumb-color: #5b5c6b;
    --scroll-track-color: #444147;

    --search-color: #adacac;
}

$basic-color: var(--basic-color);
$basic-focus-color: var(--basic-focus-color);
$basic-active-color: var(--basic-active-color);
$chevron-background-color: var(--chevron-background-color);
$chevron-background-color-outline: var(--chevron-background-color-outline);
$chevron-background-color-basic: var(--chevron-background-color-basic);
$chevron-inner-color: var(--chevron-inner-color);
$drop-down-border-color: var(--drop-down-border-color);
$scroll-thumb-color: var(--scroll-thumb-color);
$scroll-track-color: var(--scroll-track-color);

$search-color: var(--search-color);

$drop-down-color-themes: () !default;
$drop-down-color-themes: map-merge(
    (
        "basic": (
            "background-color": $basic-color,
            "hover-color": $border-color-hover,
            "focus-color": $basic-focus-color,
            "active-color": $basic-active-color,
        ),
        "primary": (
            "background-color": $primary,
            "hover-color": $primary-dark,
            "focus-color": $primary-light,
            "active-color": $primary-dark,
        ),
        "secondary": (
            "background-color": $secondary,
            "hover-color": $secondary-dark,
            "focus-color": $secondary-light,
            "active-color": $secondary-dark,
        ),
        "warning": (
            "background-color": $warning,
            "hover-color": $warning-dark,
            "focus-color": $warning-light,
            "active-color": $warning-dark,
        ),
        "danger": (
        "background-color": $danger,
            "hover-color": $danger-dark,
            "focus-color": $danger-light,
            "active-color": $danger-dark,
        ),
        "info": (
            "background-color": $info,
            "hover-color": $info-dark,
            "focus-color": $info-light,
            "active-color": $info-dark,
        ),
        "success": (
            "background-color": $success,
            "hover-color": $success-dark,
            "focus-color": $success-light,
            "active-color": $success-dark,
        ),
    ),
    $drop-down-color-themes
);

@mixin dropDownTheme($colorMap, $root, $colorType) {
    background-color: map-get($colorMap, background-color);
    color: $text-color;

    &::before {
        border-color: map-get($colorMap, focus-color);
    }

    &:not(:focus):hover {
        background-color: map-get($colorMap, hover-color);
    }

    &:not(:active):focus-within {
        &::before {
            opacity: 1;
        }
    }

    &:active {
        background-color: map-get($colorMap, hover-color);
    }

    #{$root}__icon-chevron {
        svg {
            rect {
                fill: $chevron-background-color;

                @if ($colorType == "basic") {
                    fill: $chevron-background-color-basic;
                }
            }
            path {
                stroke: $chevron-inner-color;
            }
        }
    }

    #{$root}__selected-items {
        color: #ffffff;

        @if ($colorType == "basic") {
            color: $text-color;
        }

        @if ($colorType == "warning" or $colorType == "info") {
            color: #312c3a;
        }
    }
}

@mixin dropDownOutlineTheme($colorMap, $root) {
    background-color: $element-background-color;
    border: 1px solid map-get($colorMap, background-color);
    color: $text-color;

    &::before {
        border-color: map-get($colorMap, focus-color);
    }

    &:not(:focus):hover {
        border-color: map-get($colorMap, active-color);
    }

    &:not(:active):focus-within {
        border-color: transparent;
        &::before {
            opacity: 1;
        }
    }

    &:active {
        border-color: map-get($colorMap, active-color);
    }

    #{$root}__icon-chevron {
        svg {
            rect {
                fill: $chevron-background-color-outline;
            }
            path {
                stroke: $chevron-inner-color;
            }
        }
    }
}

.DropDownFieldView {
    $root: &;

    position: relative;
    width: 240px;
    outline: none;
    cursor: pointer;

    //Pseudo element for focus statement
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        opacity: 0;
        border: 4px solid transparent;
        border-radius: inherit;
    }

    $sizes: () !default;
    $sizes: map-merge(
        (
            "lg": (
                "border-radius": $radius-large,
                "height": $input-height-lg,
                "beforeTransform": translateX(-1.6%) translateY(-6.5%),
                "beforeRadius": 16px,
                "afterTransform": translateX(-0.75%) translateY(-1.75%),
                "afterRadius": 14px,
                "selectedItemsPadding": 16px,
                "font-size": $font-size-lg,
                "line-height": 24px,
            ),
            "md": (
                "border-radius": $radius-large,
                "height": $input-height-md,
                "beforeTransform": translateX(-1.6%) translateY(-7.5%),
                "beforeRadius": 16px,
                "afterTransform": translateX(-0.75%) translateY(-2%),
                "afterRadius": 14px,
                "selectedItemsPadding": 12px,
                "font-size": $font-size-base,
                "line-height": 22px,
            ),
            "sm": (
                "border-radius": $radius-small,
                "height": $input-height-sm,
                "beforeTransform": translateX(-1.6%) translateY(-9.5%),
                "beforeRadius": 12px,
                "afterTransform": translateX(-0.6%) translateY(-2.5%),
                "afterRadius": 10px,
                "selectedItemsPadding": 8px,
                "font-size": $font-size-sm,
                "line-height": 18px,
            ),
        ),
        $sizes
    );

    &_size {
        @each $size, $sizeMap in $sizes {
            &_#{$size} {
                border-radius: map-get($sizeMap, border-radius);
                height: map-get($sizeMap, height);

                &::before {
                    transform: map-get($sizeMap, beforeTransform);
                    border-radius: map-get($sizeMap, beforeRadius);
                }

                &::after {
                    transform: map-get($sizeMap, afterTransform);
                    border-radius: map-get($sizeMap, afterRadius);
                }

                #{$root}__selected-items {
                    padding-top: map-get($sizeMap, selectedItemsPadding);
                    padding-bottom: map-get($sizeMap, selectedItemsPadding);
                }

                #{$root}__icon-chevron {
                    height: map-get($sizeMap, height);
                }

                font-size: map-get($sizeMap, font-size);
                line-height: map-get($sizeMap, line-height);
            }
        }
    }

    @each $colorType, $colorMap in $drop-down-color-themes {
        &_#{$colorType} {
            @include dropDownTheme($colorMap, $root, $colorType);
        }

        &_outline_#{$colorType} {
            @include dropDownOutlineTheme($colorMap, $root);
        }
    }

    &__icon-chevron {
        width: 36px;
        position: absolute;
        top: 50%;
        right: 0px;

        transform: translateY(-50%);

        display: flex;
        justify-content: center;
        align-items: center;

        svg {
            transition: transform 125ms ease-in-out;
        }
    }

    &__selected-items {
        position: absolute;
        width: calc(100% - 29px);
        height: 100%;
        top: 0;
        left: 0;
        overflow: hidden;
        padding-left: 8px;

        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    &__drop-down {
        position: absolute;
        z-index: 2;
        width: 100%;
        height: fit-content;
        top: calc(100% + 8px);
        left: 0;

        background-color: $element-background-color;

        border: 1px solid $drop-down-border-color;
        overflow: hidden;
        border-radius: 12px;

        &-list {
            @include scrollWrapper(240px, 0, $scroll-thumb-color, $scroll-track-color);
        }
    }

    &_opened {
        #{$root}__icon-chevron {
            svg {
                transform: rotate(180deg);
            }
        }
    }

    &__search {
        width: 100%;
        padding: 8px;
        position: relative;

        &-input {
            width: 220px;
            border-radius: 6px;
            outline: none;

            font-size: $font-size-base;
            font-weight: 400;
            line-height: 22px;
            border: 1px solid $border-color;
            background-color: $element-background-color;
            padding: 4px;
            padding-left: 32px;

            color: $text-color;

            &::-webkit-search-cancel-button {
                display: none;
            }
        }

        &-icon {
            display: inline-block;
            width: 24px;
            height: 24px;
            position: absolute;
            top: 50%;
            left: 10px;

            transform: translateY(-50%);

            svg {
                circle,
                path {
                    stroke: $search-color;
                }
            }
        }
    }

    &__placeholder {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }
}
