@use "sass:map";
@use "../variables/common/colors";
@use "../variables/index" as variables;

@mixin svg-color($color) {
    svg {
        path {
            stroke: $color;
        }
    }
}

@mixin button-theme($colorMap, $colorName, $root) {
    background-color: map.get($colorMap, color);
    color: map.get($colorMap, text-color);

    &:hover {
        background-color: map.get($colorMap, color-dark);
    }
    &:focus,
    &:focus-visible {
        box-shadow:
            0 0 0 4px map.get($colorMap, color-light),
            0 0 0 4px map.get($colorMap, color-light);
    }
    &:active {
        background-color: map.get($colorMap, color-light);
    }

    &:disabled {
        background-color: map.get($colorMap, color);
        color: map.get($colorMap, text-color);
    }

    #{$root}__loader {
        svg {
            path {
                stroke: map.get($colorMap, color-light);

                @if ($colorName == "basic") {
                    stroke: map.get($colorMap, color-dark);
                }
            }
        }
    }

    #{$root}__link {
        color: map.get($colorMap, color-dark);

        &:hover {
            color: map.get($colorMap, color-light);
        }
    }
}

@mixin button-outline-theme($colorMap, $colorName, $root) {
    background-color: transparent;
    color: map.get($colorMap, color);
    stroke: map.get($colorMap, color);
    outline: 1px solid map.get($colorMap, color);

    @include svg-color(map.get($colorMap, text-color));

    &:hover {
        @include svg-color(map.get($colorMap, color-dark));
        color: map.get($colorMap, color-dark);
        outline-color: map.get($colorMap, color-dark);
    }
    &:focus {
        box-shadow:
            0 0 0 4px map.get($colorMap, color-light),
            0 0 0 4px map.get($colorMap, color-light);
        outline: 1px solid transparent;
    }
    &:active {
        @include svg-color(map.get($colorMap, color-light));
        color: map.get($colorMap, color-light);
        outline-color: map.get($colorMap, color-light);
        stroke: map.get($colorMap, color-light);
        box-shadow: none;
    }

    &:disabled {
        background-color: transparent;
        @include svg-color(map.get($colorMap, color));
        color: map.get($colorMap, color);
        outline: 1px solid map.get($colorMap, color);
    }

    @if ($colorName == "basic") {
        color: colors.$text-color;
    }

    #{$root}__loader {
        @include svg-color(map.get($colorMap, color));
    }
}

@mixin expand-button() {
    font-size: variables.$font-size-xs;
    font-weight: variables.$font-weight-sm;
    line-height: variables.$line-height-xs;
    text-align: center;

    .ButtonView__text {
        color: variables.$text-color;
    }
}
