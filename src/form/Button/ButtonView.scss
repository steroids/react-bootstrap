@use "../../scss/variables" as vars;
@use '../../scss/mixins';

$btn-font-weight-sm: 400;
$btn-font-weight-lg: 800;
$btn-line-height: 24px;
$btn-letter-spacing: 0.1em;

.ButtonView {
    $root: &;

    transition-property: color, background-color, border-color, box-shadow;
    transition-duration: vars.$transition-duration;
    transition-timing-function: ease-in-out;

    display: flex;
    justify-content: center;
    align-items: center;

    cursor: pointer;

    &_button {
        position: relative;
        border-radius: vars.$radius-small;
        user-select: none;
        border: 3px solid transparent;

        padding: 0 20px;
        display: flex;
        justify-content: center;
        align-items: center;

        font-weight: $btn-font-weight-sm;
        font-size: vars.$font-size-sm;
        line-height: $btn-line-height;
        outline: none;
    }

    @each $colorName, $colorMap in vars.$color-themes {
        &_color_#{$colorName} {
            @include mixins.button-theme($colorMap, $colorName, $root);
        }
    }

    @each $colorName, $colorMap in vars.$color-themes {
        &_outline_#{$colorName} {
            @include mixins.button-outline-theme($colorMap, $colorName, $root);
        }
    }

    &__label {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &_block {
        display: block;
        width: 100%;

        #{$root}__label {
            justify-content: center;
        }
    }

    &_tag { 
        &-a { 
            width: auto;
        }
    }

    &_disabled {
        opacity: 0.5;
        color: rgba(0, 0, 0, 0.1);
        cursor: not-allowed;

        input {
            cursor: inherit;
        }
    }

    &_size {
        &_sm {
            height: 34px;
            font-size: vars.$font-size-sm;
            border-radius: vars.$radius-small;
        }
        &_md {
            height: 46px;
            font-size: vars.$font-size-base;
            border-radius: vars.$radius-large;
        }
        &_lg {
            height: 56px;
            font-size: vars.$font-size-lg;
            border-radius: vars.$radius-large;
        }
    }

    &_link {
        display: inline;
        width: auto;
        height: auto;
        background-color: transparent;

        &:focus-visible, &:focus {
            box-shadow: none;
        }

        &:hover,&:active {
            background-color: transparent;
        }
        
    }

    &__link { 
        display: inline-flex;
        align-items: center;

        #{$root}__text {
            color: vars.$link-color;
        }

        &:hover { 
            #{$root}__text { 
                color: vars.$link-color-hover;
            }
        }
    }

    &__icon {
        margin-right: 10px;
        width: fit-content;
        height: fit-content;
        &_without-label {
            margin: 0;
        }
    }

    &_failed {
        &,
        &:hover {
            border-color: vars.$danger;
            box-shadow: 0 0 1rem rgba(vars.$danger, 0.2);
        }
    }

    &_loading {
      cursor: default;
    }

    &__preloader {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &__badge {
        position: relative;
        top: -1px;
        margin-left: 4px;
        border-radius: vars.$radius-small;
        font-size: vars.$font-size-xs;
        line-height: 16px;
        padding: 3px 5px;

        $badge-types: (
            "primary": vars.$primary,
            "secondary": vars.$secondary,
            "success": vars.$success,
            "danger": vars.$danger,
            "warning": vars.$warning,
            "info": vars.$info,
        );

        @each $type, $color in $badge-types {
            &_#{$type} {
                background-color: $color;
            }
        }
    }

    &__loader {
        width: 24px;
        height: 24px;
        display: flex;
        justify-content: center;
        align-items: center;

        svg {
            width: 14px;
            height: 14px;
            transform-origin: center;
            animation: rotate 1.45s linear infinite;
        }
    }
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}
