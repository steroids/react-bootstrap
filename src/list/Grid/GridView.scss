@use "../../scss/variables";

:root {
    --grid-header-background-color: var(--light-gray);
    --grid-border-color: var(--gray);

    --grid-td-background-color: #FFFFFF;
    --grid-td-alternating-color: var(--additional-light-gray);
}

html[data-theme="dark"] {
    --grid-header-background-color: var(--additional-gray-dark);
    --grid-border-color: var(--additional-gray-dark);

    --grid-td-background-color: var(--graphite);
    --grid-td-alternating-color: var(--graphite-dark);
}

$grid-header-background-color: var(--grid-header-background-color);
$grid-border-color: var(--grid-border-color);

$grid-td-background-color: var(--grid-td-background-color);
$grid-td-alternating-color: var(--grid-td-alternating-color);

.GridView {
    $root: &;

    text-align: left;

    width: 100%;

    &__table {
        width: 100%;
        border: none;
        border-spacing: 0;
        border-collapse: separate;
        border: 1px solid $grid-border-color;
        border-radius: variables.$radius-large;
        margin: 24px 0;

        th,
        td {
            color: variables.$text-color;
            background-color: $grid-td-background-color;
        }
        th {
            font-weight: variables.$font-weight-lg;
            background-color: $grid-header-background-color;
        }

        th:not(:last-child),
        td:not(:last-child) {
            border-right: 1px solid $grid-border-color;
        }

        thead > tr > th,
        tbody > tr:not(:last-child) > td,
        tr:not(:last-child) > td,
        thead:not(:last-child),
        tbody:not(:last-child) {
            border-bottom: 1px solid $grid-border-color;
        }

        thead > tr > th {
            &:first-child {
                border-top-left-radius: variables.$radius-large;
            }
            &:last-child {
                border-top-right-radius: variables.$radius-large;
            }
        }

        tbody > tr:last-child > td {
            &:first-child {
                border-bottom-left-radius: variables.$radius-large;
            }

            &:last-child {
                border-bottom-right-radius: variables.$radius-large;
            }
        }
    }

    &_alternatingColors{
        #{$root}__table tbody tr:nth-child(even) td { 
            background-color: $grid-td-alternating-color;
        }
    }

    &_size {
        &_lg {
            #{$root}__table {
                font-size: variables.$font-size-lg;
                line-height: variables.$line-height-lg;
            }

            th,
            td:not(#{$root}__column_isDiagram) {
                padding: 24px 16px;
            }
        }

        &_md {
            #{$root}__table {
                font-size: variables.$font-size-base;
                line-height: variables.$line-height-base;
            }

            th,
            td:not(#{$root}__column_isDiagram) {
                padding: 21px 12px;
            }
        }

        &_sm {
            #{$root}__table {
                font-size: variables.$font-size-sm;
                line-height: variables.$line-height-sm;
            }

            th,
            td:not(#{$root}__column_isDiagram) {
                padding: 16px 8px;
            }
        }
    }


    &__column {

        .IconView { 
            display: inline-block;
            width: 24px;
            height: 24px;

            svg {
                width: 100%;
                height: 100%;
            }
        }

        &_hasIcon { 
            display: flex;    
            flex-flow: row nowrap;
            align-items: center;

            .IconView { 
                margin-left: 8px;           
            }

            &-left { 
                span {
                    &:nth-child(1) {
                        order: 2;
                    }

                    &:nth-child(2) {
                        order: 1;
                    }
                }

                .IconView { 
                    margin-left: 0;
                    margin-right: 8px;
                }
            }
        }
    }
}
