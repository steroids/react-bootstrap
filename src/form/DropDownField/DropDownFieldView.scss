@use "sass:map";
@use "../../scss/variables";
@use '../../scss/mixins';
@forward "./views/DropDownFieldOpenedContent/DropDownFieldOpenedContent.scss";

:root {
    --basic-color: #eef1f2;
    --basic-focus-color: #f5f8fa;
    --basic-active-color: #e5e9eb;
    --chevron-background-color: #ffffff;
    --chevron-background-color-outline: #f5f8fa;
    --chevron-inner-color: #323232;

    --drop-down-item-hover-background-color: #f5f8fa;
    --drop-down-item-select-background-color: #eef1f2;
}

html[data-theme="dark"] {
    --basic-color: #333646;
    --basic-focus-color: #adaab3;
    --basic-active-color: #4e4f57;
    --chevron-background-color: #16171b;
    --chevron-background-color-outline: #191b1f;
    --chevron-inner-color: #ffffff;

    --drop-down-item-select-background-color: #5b5c6b;
    --drop-down-item-hover-background-color: #4e4f57;
}

$basic-color: var(--basic-color);
$basic-focus-color: var(--basic-focus-color);
$basic-active-color: var(--basic-active-color);
$chevron-background-color: var(--chevron-background-color);
$chevron-background-color-outline: var(--chevron-background-color-outline);
$chevron-inner-color: var(--chevron-inner-color);

$drop-down-item-select-background-color: var(--drop-down-item-select-background-color);
$drop-down-item-hover-background-color: var(--drop-down-item-hover-background-color);

$drop-down-color-themes: () !default;
$drop-down-color-themes: map.merge(
    (
        "basic": (
            "background-color": $basic-color,
            "hover-color": variables.$element-border-color-hover,
            "focus-color": $basic-focus-color,
            "active-color": $basic-active-color
        ),
        "primary": (
            "background-color": variables.$primary,
            "hover-color": variables.$primary-dark,
            "focus-color": variables.$primary-light,
            "active-color": variables.$primary-dark
        ),
        "secondary": (
            "background-color": variables.$secondary,
            "hover-color": variables.$secondary-dark,
            "focus-color": variables.$secondary-light,
            "active-color": variables.$secondary-dark
        ),
        "warning": (
            "background-color": variables.$warning,
            "hover-color": variables.$warning-dark,
            "focus-color": variables.$warning-light,
            "active-color": variables.$warning-dark
        ),
        "danger": (
            "background-color": variables.$danger,
            "hover-color": variables.$danger-dark,
            "focus-color": variables.$danger-light,
            "active-color": variables.$danger-dark
        ),
        "info": (
            "background-color": variables.$info,
            "hover-color": variables.$info-dark,
            "focus-color": variables.$info-light,
            "active-color": variables.$info-dark
        ),
        "success": (
            "background-color": variables.$success,
            "hover-color": variables.$success-dark,
            "focus-color": variables.$success-light,
            "active-color": variables.$success-dark
        )
    ),
    $drop-down-color-themes
);

@mixin dropDownTheme($colorMap, $root, $colorType) {
    background-color: map.get($colorMap, background-color);
    color: variables.$text-color;

    &::before {
        border-color: map.get($colorMap, focus-color);
    }

    &:not(:focus):hover {
        background-color: map.get($colorMap, hover-color);
    }

    &:not(:active):focus-within {
        &::before {
            opacity: 1;
        }
    }

    &:active {
        background-color: map.get($colorMap, hover-color);
    }

    #{$root}__icon-chevron {
        svg {
            rect {
                fill: $chevron-background-color;
            }
            path {
                stroke: $chevron-inner-color;
            }
        }
    }

    #{$root}__selected-items {
        color: #ffffff;

        @if ($colorType == "basic") {
            color: variables.$text-color;
        }

        @if ($colorType == "warning" or $colorType == "info") {
            color: #312c3a;
        }
    }
}

@mixin dropDownOutlineTheme($colorMap, $root) {
    background-color: variables.$element-field-background-color;
    border: 1px solid map.get($colorMap, background-color);
    color: variables.$text-color;

    &::before {
        border-color: map.get($colorMap, focus-color);
    }

    &:not(:focus):hover {
        border-color: map.get($colorMap, active-color);
    }

    &:not(:active):focus-within {
        border-color: transparent;
        &::before {
            opacity: 1;
        }
    }

    &:active {
        border-color: map.get($colorMap, active-color);
    }

    #{$root}__icon-chevron {
        svg {
            rect {
                fill: $chevron-background-color-outline;
            }
            path {
                stroke: $chevron-inner-color;
            }
        }
    }
}

.DropDownFieldView {
    $root: &;

    position: relative;
    min-width: 125px;
    outline: none;
    cursor: pointer;

    @include mixins.invalid-field($root);

    //Pseudo element for focus statement
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        opacity: 0;
        border: 4px solid transparent;
        border-radius: inherit;
    }

    $sizes: () !default;
    $sizes: map.merge(
        (
            "lg": (
                "border-radius": variables.$radius-large,
                "height": variables.$input-height-lg,
                "beforeTransform": translateX(-4px) translateY(-4px),
                "beforeRadius": 16px,
                "selectedItemsPadding": 16px,
                "font-size": variables.$font-size-lg,
                "line-height": 24px
            ),
            "md": (
                "border-radius": variables.$radius-large,
                "height": variables.$input-height-md,
                "beforeTransform": translateX(-4px) translateY(-4px),
                "beforeRadius": 16px,
                "selectedItemsPadding": 12px,
                "font-size": variables.$font-size-base,
                "line-height": 22px
            ),
            "sm": (
                "border-radius": variables.$radius-small,
                "height": variables.$input-height-sm,
                "beforeTransform": translateX(-4px) translateY(-4px),
                "beforeRadius": 12px,
                "selectedItemsPadding": 8px,
                "font-size": variables.$font-size-sm,
                "line-height": 18px
            )
        ),
        $sizes
    );

    &_size {
        @each $size, $sizeMap in $sizes {
            &_#{$size} {
                border-radius: map.get($sizeMap, border-radius);
                height: map.get($sizeMap, height);

                &::before {
                    transform: map.get($sizeMap, beforeTransform);
                    border-radius: map.get($sizeMap, beforeRadius);
                }

                #{$root}__selected-items {
                    padding-top: map.get($sizeMap, selectedItemsPadding);
                    padding-bottom: map.get($sizeMap, selectedItemsPadding);
                }

                #{$root}__icon-chevron {
                    height: map.get($sizeMap, height);
                }

                font-size: map.get($sizeMap, font-size);
                line-height: map.get($sizeMap, line-height);
            }
        }
    }

    @each $colorType, $colorMap in $drop-down-color-themes {
        &_#{$colorType} {
            @include dropDownTheme($colorMap, $root, $colorType);
        }

        &_outline_#{$colorType} {
            @include dropDownOutlineTheme($colorMap, $root);
        }
    }

    &__icon-chevron {
        width: 40px;
        position: absolute;
        top: 50%;
        right: 0px;
        outline: none;

        transform: translateY(-50%);

        display: flex;
        justify-content: center;
        align-items: center;

        svg {
            transition: transform 125ms ease-in-out;
        }
    }

    &__selected-items {
        position: absolute;
        width: calc(100% - 29px);
        height: 100%;
        top: 0;
        left: 0;
        overflow: hidden;
        padding-left: 8px;
        outline: none;

        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    &_opened {
        #{$root}__icon-chevron {
            svg {
                transform: rotate(180deg);
            }
        }
    }

    &__placeholder {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    &__icon-close {
        position: absolute;
        z-index: 1;
        width: 24px;
        height: 24px;

        display: flex;
        justify-content: center;
        align-items: center;
        top: 50%;
        right: 36px;
        transform: translateY(-50%);

        svg > * {
            stroke: variables.$text-color
        }
    }

    &_is-invalid {
        border: 1px solid variables.$danger !important;
    }

    &_disabled {
        background-color: variables.$element-background-color-disabled;
        border-color: transparent;
        pointer-events: none;
    }

    &__input {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        opacity: 0;
        cursor: default;
        pointer-events: none;
        user-select: none;
    }
    &__wrapper {
        padding: unset;
        overflow: hidden;
        min-width: unset;
    }
}
