:root {
    --basic-color: #eef1f2;
    --basic-focus-color: #f5f8fa;
    --basic-active-color: #e5e9eb;
}

html[data-theme="dark"] {
    --basic-color: #5b5c6b;
    --basic-focus-color: #adaab3;
    --basic-active-color: #4e4f57;
}

$basic-color: var(--basic-color);
$basic-focus-color: var(--basic-focus-color);
$basic-active-color: var(--basic-active-color);

$drop-down-color-themes: () !default;

//TODO text color adaptive
$drop-down-color-themes: map-merge(
    (
        "basic": (
            "background-color": $basic-color,
            "hover-color": $border-color-hover,
            "focus-color": $basic-focus-color,
            "active-color": $basic-active-color,
            "text-color": $text-color,
        ),
        "primary": (
            "background-color": $primary,
            "hover-color": $primary-dark,
            "focus-color": $primary-light,
            "active-color": $primary-dark,
            "text-color": #FFFFFF,
        ),
        "secondary": (
            "background-color": $secondary,
            "hover-color": $secondary-dark,
            "focus-color": $secondary-light,
            "active-color": $secondary-dark,
            "text-color": #FFFFFF,
        ),
        "warning": (
            "background-color": $warning,
            "hover-color": $warning-dark,
            "focus-color": $warning-light,
            "active-color": $warning-dark,
            "text-color":  #312C3A,
        ),
        "danger": (
            "background-color": $danger,
            "hover-color": $danger-dark,
            "focus-color": $danger-light,
            "active-color": $danger-dark,
            "text-color":  #312C3A,
        ),
        "info": (
            "background-color": $info,
            "hover-color": $info-dark,
            "focus-color": $info-light,
            "active-color": $info-dark,
            "text-color":  #312C3A,
        ),
        "success": (
            "background-color": $success,
            "hover-color": $success-dark,
            "focus-color": $success-light,
            "active-color": $success-dark,
            "text-color":  #312C3A,
        ),
    ),
    $drop-down-color-themes
);

@mixin dropDownTheme($colorMap) {
    background-color: map-get($colorMap, background-color);
    color: map-get($colorMap, text-color);

    &::before {
        border-color: map-get($colorMap, focus-color);
    }

    &:not(:focus):hover {
        background-color: map-get($colorMap, hover-color);
    }

    &:not(:active):focus {
        &::before {
            opacity: 1;
        }
    }

    &:active {
        &::after {
            opacity: 1;
            border-color: map-get($colorMap, active-color);
        }
    }
}

@mixin dropDownOutlineTheme($colorMap) {
    background-color: transparent;
    border: 1px solid map-get($colorMap, background-color);

    &::before {
        border-color: map-get($colorMap, focus-color);
    }

    &:not(:focus):hover {
        border-color: map-get($colorMap, active-color);
    }

    &:not(:active):focus {
        border-color: transparent;
        &::before {
            opacity: 1;
        }
    }

    &:active {
        border-color: map-get($colorMap, active-color);
    }
}

.DropDownFieldView {
    $root: &;

    position: relative;
    width: 140px;
    outline: none;
    cursor: pointer;

    //Pseudo element for focus statement
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        opacity: 0;
        border: 4px solid transparent;
        border-radius: inherit;
    }

    //Pseudo element for active statement
    &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        pointer-events: none;
        width: 100%;
        height: 100%;
        opacity: 0;
        border: 1px solid transparent;
        border-radius: inherit;
    }

    &_size {
        &_lg {
            border-radius: $radius-large;
            height: $input-height-lg;

            &::before {
                transform: translateX(-2.75%) translateY(-6.5%);
                border-radius: 16px;
            }

            &::after {
                transform: translateX(-0.75%) translateY(-1.75%);
                border-radius: 14px;
            }
        }

        &_md {
            border-radius: $radius-large;
            height: $input-height-md;

            &::before {
                transform: translateX(-2.75%) translateY(-7.5%);
                border-radius: 16px;
            }

            &::after {
                transform: translateX(-0.75%) translateY(-2%);
                border-radius: 14px;
            }
        }

        &_sm {
            border-radius: $radius-small;
            height: $input-height-sm;

            &::before {
                transform: translateX(-2.75%) translateY(-9.5%);
                border-radius: 12px;
            }

            &::after {
                transform: translateX(-0.75%) translateY(-2.5%);
                border-radius: 10px;
            }
        }
    }

    @each $colorType, $colorMap in $drop-down-color-themes {
        &_#{$colorType} {
            @include dropDownTheme($colorMap);
        }

        &_outline_#{$colorType} {
            @include dropDownOutlineTheme($colorMap);
        }
    }
}
