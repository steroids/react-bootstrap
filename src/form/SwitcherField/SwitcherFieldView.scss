@use "sass:map";
@use "../../scss/variables";

:root {
    --switcher-dot-disabled-color: #dbe2e6;
    --switcher-slider-disabled-color: #f1f5f7;
}

html[data-theme="dark"] {
    --switcher-dot-disabled-color: #4e4f57;
    --switcher-slider-disabled-color: #5b5c6b;
}

$switcher-dot-disabled-color: var(--switcher-dot-disabled-color);
$switcher-slider-disabled-color: var(--switcher-slider-disabled-color);

$background-color-transition-timing: 150ms;


.SwitcherFieldView {
    $root: &;
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
    row-gap: 10px;

    &__switcher {
        display: inline-flex;
        column-gap: 12px;
        align-items: center;
        position: relative;
        cursor: pointer;

        $sizes: () !default;
        $sizes: map.merge(
            (
                "lg": (
                    "width": 40px,
                    "height": 24px,
                    "dotSize": 18px,
                    "dotTranslateDefault": translateY(-50%) translateX(4px),
                    "dotTranslateActive": translateY(-50%) translateX(16px),
                    "font-size": variables.$font-size-lg,
                    "line-height": variables.$line-height-lg,
                ),
                "md": (
                    "width": 34px,
                    "height": 20px,
                    "dotSize": 14px,
                    "dotTranslateDefault": translateY(-50%) translateX(3px),
                    "dotTranslateActive": translateY(-50%) translateX(15px),
                    "font-size": variables.$font-size-base,
                    "line-height": variables.$line-height-base,
                ),
                "sm": (
                    "width": 28px,
                    "height": 16px,
                    "dotSize": 12px,
                    "dotTranslateDefault": translateY(-50%) translateX(2px),
                    "dotTranslateActive": translateY(-50%) translateX(12px),
                    "font-size": variables.$font-size-sm,
                    "line-height": variables.$line-height-sm,
                ),
            ),
            $sizes
        );

        &_size { 
            @each $size, $sizeMap in $sizes { 
                &_#{$size} {
                    #{$root}__slider {
                        width: map.get($sizeMap, width);
                        height: map.get($sizeMap, height);
    
                        &::before {
                            width: map.get($sizeMap, dotSize);
                            height: map.get($sizeMap, dotSize);
                            transform: map.get($sizeMap, dotTranslateDefault);
                        }
                    }
    
                    #{$root}__input:checked + #{$root}__slider {
                        &::before {
                            transform: map.get($sizeMap, dotTranslateActive);
                        }
                    }
    
                    #{$root}__label {
                        font-size: map.get($sizeMap, font-size);
                        line-height: map.get($sizeMap, line-height);
                    }
                }
            }
        }
    }

    &__input {
        position: absolute;
        cursor: pointer;
        z-index: 3;
        opacity: 0;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;

        &:checked + #{$root}__slider {
            background-color: variables.$primary;
            border-color: transparent;

            &::before {
                background-color: variables.$white;
            }

            &::after {
                border-color: variables.$primary-light;
            }
        }

        &:hover:not(:checked):not(:disabled) + #{$root}__slider {
            &::before {
                background-color: variables.$gray-dark;
            }
        }

        &:checked:hover + #{$root}__slider {
            background-color: variables.$primary-dark;
        }

        &:focus:not(:active) + #{$root}__slider {
            &:after {
                opacity: 1;
            }
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled ~ #{$root}__label {
            color: variables.$gray;
        }

        &:disabled + #{$root}__slider {
            background-color: $switcher-slider-disabled-color;

            &::before {
                background-color: $switcher-dot-disabled-color;
            }
        }
    }

    &__slider {
        width: 100%;
        height: 100%;
        position: relative;
        display: inline-block;
        border: 1px solid variables.$gray;
        border-radius: 200px;
        transition: background-color $background-color-transition-timing ease-in-out;

        &::after {
            position: absolute;
            content: "";
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: inline-block;
            height: calc(100% + 2px);
            width: calc(100% + 2px);
            border-radius: inherit;
            border: 4px solid variables.$gray;
            transform: translateX(-5px) translateY(-5px);
            opacity: 0;
            pointer-events: none;
        }

        &::before {
            position: absolute;
            content: "";
            display: inline-block;
            top: 50%;
            border-radius: variables.$radius-circle;
            background-color: variables.$gray;
            transition: transform 100ms ease-in-out, background-color $background-color-transition-timing ease-in-out;
        }
    }

    &__label {
        color: variables.$text-color;
    }
}
